version = getVersionString()

apply plugin: "java"
apply plugin: "application"
apply plugin: "eclipse"

sourceCompatibility = 1.7
targetCompatibility = 1.7

mainClassName = "minijava.MiniJavaCompiler"
sourceSets.main.java.srcDir "src/generated-sources/java"

ext.antlr = [
	grammarpackage: "minijava",
	antlrSource: 'src/main/antlr',
	destinationDir: "src/generated-sources/java"
]

configurations {
	antlr4 {
		description = "ANTLR4"
	}
}

dependencies {
	compile(group: "args4j", name: "args4j", version: "2.+")
	compile(group: "org.antlr", name: "antlr4-runtime", version: "4.3")
	compile(group: "org.apache.commons", name: "commons-lang3", version: "3.3.2")
	compile(group: "commons-io", name: "commons-io", version: "2.4")
	antlr4(group: "org.antlr", name: "antlr4", version: "4.3")
	testCompile(group: "junit", name: "junit", version: "4.+")
}

repositories {
	mavenLocal()
	mavenCentral()
}

/* tried to exclude the resources folder, unsuccessfully */
/*sourceSets {
	test {
		exclude 'resources/'
	}
}*/

/*
 * This method must not be named getVersion, because it would
 * overwrite the implicit getter of the version property in the
 * current Project object.
 */
def getVersionString() {
	def out = new ByteArrayOutputStream()
	exec {
		commandLine('git', 'describe', '--tags')
		standardOutput = out
	}
	return out.toString().trim()
}

task antlrOutputDir << {
	mkdir(antlr.destinationDir)
}

task generateGrammarSource(dependsOn: antlrOutputDir, type: JavaExec) {
	description = 'Generates Java sources from ANTLR4 grammars.'

	inputs.dir file(antlr.antlrSource)
	outputs.dir file(antlr.destinationDir)

	def grammars = fileTree(antlr.antlrSource).include('**/*.g4')

	main = 'org.antlr.v4.Tool'
	classpath = configurations.antlr4
	def pkg = antlr.grammarpackage.replaceAll("\\.", "/")
	args = ["-o", "${antlr.destinationDir}/${pkg}"/*, "-atn"*/, "-visitor", "-no-listener", "-package", antlr.grammarpackage, grammars.files].flatten()
}

compileJava {
	dependsOn generateGrammarSource
	source antlr.destinationDir
}

clean {
	delete antlr.destinationDir
}